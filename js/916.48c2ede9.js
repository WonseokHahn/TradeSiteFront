"use strict";(self["webpackChunktrade_frontend"]=self["webpackChunktrade_frontend"]||[]).push([[916],{3916:function(e,t,a){a.r(t),a.d(t,{default:function(){return g}});var o=a(6768),s=a(4232);const n={class:"auth-callback"},l={class:"callback-container"},r={class:"callback-content"},c={class:"callback-message"};function i(e,t,a,i,u,h){return(0,o.uX)(),(0,o.CE)("div",n,[(0,o.Lk)("div",l,[(0,o.Lk)("div",r,[t[0]||(t[0]=(0,o.Lk)("div",{class:"loading-spinner-large"},null,-1)),t[1]||(t[1]=(0,o.Lk)("h2",{class:"callback-title"},"로그인 처리 중...",-1)),(0,o.Lk)("p",c,(0,s.v_)(u.message),1)])])])}var u=a(782),h={name:"AuthCallback",data(){return{message:"잠시만 기다려주세요."}},async mounted(){await this.handleAuthCallback()},methods:{...(0,u.i0)("auth",["loginWithToken"]),async handleAuthCallback(){try{console.log("🔄 OAuth 콜백 처리 시작"),console.log("📍 현재 URL:",window.location.href),console.log("🔍 쿼리 파라미터:",this.$route.query);const e=this.$route.query.token,t=this.$route.query.provider,a=this.$route.query.name;if(!e)throw new Error("토큰이 없습니다.");console.log("🎫 받은 토큰:",e.substring(0,30)+"..."),console.log("🔐 OAuth 제공자:",t),console.log("👤 사용자 이름:",decodeURIComponent(a||"")),this.message="토큰을 처리하고 있습니다...";const o=await this.loginWithToken(e);if(!o)throw new Error("로그인 처리에 실패했습니다.");console.log("✅ 로그인 성공! 홈으로 이동"),this.message="로그인 완료! 홈으로 이동합니다...",setTimeout(()=>{this.$router.replace("/")},1e3)}catch(e){console.error("❌ Auth callback 오류:",e),this.message="로그인 처리 중 오류가 발생했습니다.",setTimeout(()=>{this.$router.replace({name:"Login",query:{error:"auth_failed"}})},3e3)}}}},d=a(1241);const k=(0,d.A)(h,[["render",i],["__scopeId","data-v-63d59ba3"]]);var g=k}}]);
//# sourceMappingURL=916.48c2ede9.js.map